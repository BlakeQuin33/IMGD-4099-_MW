// PRESS CTRL+ENTER TO RELOAD SHADER
// reference at https://github.com/charlieroberts/wgsl_live
@fragment 


fn fs( @builtin(position) pos : vec4f ) -> @location(0) vec4f {
    let downframe = frame / 120;
    var st : vec2f = (pos.xy - 0.5 * res.xy) / res.y;
    var st2 : vec2f = 0.5 - pos.xy / res.xy;
  //let audio = audio[0];
    var color : vec3f = vec3f(0.0);
  
    let r = length(st2)*2.0;
    let a = atan2(st2.y, st2.x);
  
    let f = abs(cos(a * 12.+downframe) * sin(a * 3.+downframe) ) *0.8 - 0.5;
    let p = plot(st2, f);
    color = vec3f(1. - smoothstep(p, p+0.1, r) );

    var circleWhite = circle(st * 2.5, 1.);
    var circleBlack = circle(st * 3.0, 0.7);
    var c = circleWhite - circleBlack;
    c *= 6.;
    
    c -= circle(vec2(st.x - sin(frame/60.) * .85, 1.8 * st.y - cos(frame/60.) * .65) * .8, 1.); 
    var col : vec3f = vec3f(c) * vec3f(1., 0., 0.5);
    col += vec3f(smoothstep(0.2, 0.7, c)) * vec3f(1., 1., 0.);
    col += vec3f(smoothstep(0.4, 0.55, c));
    //return vec4f(col, 1.);
    return vec4f(col + color, 1.);
}

fn plot(st : vec2f, c : f32) -> f32{
  return  smoothstep( c - 0.02, c, st.x) -
          smoothstep( c, c + 0.02, st.x);
}
fn circle(st : vec2f, blur: f32) -> f32{
    return smoothstep(0., blur, 1. - length(st));
}






